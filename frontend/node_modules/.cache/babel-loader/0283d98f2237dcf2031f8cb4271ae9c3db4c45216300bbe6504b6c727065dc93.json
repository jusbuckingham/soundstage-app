{"ast":null,"code":"var _jsxFileName = \"/Users/jusbuckingham/Documents/dev-stuff/take-home-tests/netflix-take-home/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { SearchFilters } from './components/SearchFilters';\nimport { SoundStageList } from './components/SoundStageList';\nimport sampleData from '../stage_data.json'; // Import the sample data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [soundStages, setSoundStages] = useState([]);\n  const searchSoundStages = searchCriteria => {\n    // Replace this with sampleData for testing\n    setSoundStages(sampleData);\n  };\n\n  // import React, { useState, useEffect } from 'react';\n  // import axios from 'axios';\n  // import { SearchFilters } from './components/SearchFilters'; // Import as a named export\n  // import { SoundStageList } from './components/SoundStageList'; // Import as a named export\n  // import sampleData from './stage_data.json'; // Import the sample data\n\n  // // Create an Axios instance with a base URL\n  // const axiosInstance = axios.create({\n  //   baseURL: 'http://localhost:3001', // Change the port to match your server\n  // });\n\n  // function App() {\n  //   const [soundStages, setSoundStages] = useState([]);\n\n  // const searchSoundStages = (searchCriteria) => {\n  //   axiosInstance.post('/api/search', searchCriteria)\n  //     .then((response) => {\n  //       setSoundStages(response.data);\n  //     })\n  //     .catch((error) => {\n  //       console.error(error);\n  //     });\n  // }\n\n  // useEffect(() => {\n  //   // You can optionally fetch and display all available sound stages when the app starts.\n  //   axiosInstance.get('/api/soundstages')\n  //     .then((response) => {\n  //       setSoundStages(response.data);\n  //     })\n  //     .catch((error) => {\n  //       console.error(error);\n  //     });\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Soundstage Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchFilters, {\n      onSearch: searchSoundStages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SoundStageList, {\n      soundStages: soundStages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Np5ZEQpSCsUNPVbt4301CwPS4yI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","SearchFilters","SoundStageList","sampleData","jsxDEV","_jsxDEV","App","_s","soundStages","setSoundStages","searchSoundStages","searchCriteria","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","_c","$RefreshReg$"],"sources":["/Users/jusbuckingham/Documents/dev-stuff/take-home-tests/netflix-take-home/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { SearchFilters } from './components/SearchFilters';\nimport { SoundStageList } from './components/SoundStageList';\nimport sampleData from '../stage_data.json'; // Import the sample data\n\nfunction App() {\n  const [soundStages, setSoundStages] = useState([]);\n\n  const searchSoundStages = (searchCriteria) => {\n    // Replace this with sampleData for testing\n    setSoundStages(sampleData);\n  }\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { SearchFilters } from './components/SearchFilters'; // Import as a named export\n// import { SoundStageList } from './components/SoundStageList'; // Import as a named export\n// import sampleData from './stage_data.json'; // Import the sample data\n\n// // Create an Axios instance with a base URL\n// const axiosInstance = axios.create({\n//   baseURL: 'http://localhost:3001', // Change the port to match your server\n// });\n\n// function App() {\n//   const [soundStages, setSoundStages] = useState([]);\n\n\n  // const searchSoundStages = (searchCriteria) => {\n  //   axiosInstance.post('/api/search', searchCriteria)\n  //     .then((response) => {\n  //       setSoundStages(response.data);\n  //     })\n  //     .catch((error) => {\n  //       console.error(error);\n  //     });\n  // }\n\n  // useEffect(() => {\n  //   // You can optionally fetch and display all available sound stages when the app starts.\n  //   axiosInstance.get('/api/soundstages')\n  //     .then((response) => {\n  //       setSoundStages(response.data);\n  //     })\n  //     .catch((error) => {\n  //       console.error(error);\n  //     });\n  // }, []);\n\n  return (\n    <div>\n      <h1>Soundstage Search</h1>\n      <SearchFilters onSearch={searchSoundStages} />\n      <SoundStageList soundStages={soundStages} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,QAAQ,4BAA4B;AAC1D,SAASC,cAAc,QAAQ,6BAA6B;AAC5D,OAAOC,UAAU,MAAM,oBAAoB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMU,iBAAiB,GAAIC,cAAc,IAAK;IAC5C;IACAF,cAAc,CAACN,UAAU,CAAC;EAC5B,CAAC;;EAEH;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;;EAGE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACEE,OAAA;IAAAO,QAAA,gBACEP,OAAA;MAAAO,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BX,OAAA,CAACJ,aAAa;MAACgB,QAAQ,EAAEP;IAAkB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9CX,OAAA,CAACH,cAAc;MAACM,WAAW,EAAEA;IAAY;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEV;AAACT,EAAA,CAnDQD,GAAG;AAAAY,EAAA,GAAHZ,GAAG;AAqDZ,eAAeA,GAAG;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}