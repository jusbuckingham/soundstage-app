{"ast":null,"code":"var _jsxFileName = \"/Users/jusbuckingham/Documents/dev-stuff/take-home-tests/soundstage-app/frontend/src/components/SoundStageList.js\";\nimport React from 'react';\nimport SoundStageCard from './SoundStageCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SoundStageList({\n  soundStages\n}) {\n  // This component takes an array of sound stages as a prop\n  return (\n    /*#__PURE__*/\n    // Container for the list of sound stage cards\n    _jsxDEV(\"div\", {\n      className: \"container mt-5\",\n      children: soundStages.length > 0 ?\n      // If there are sound stages, map over the array to render a card for each stage\n      soundStages.map(stage =>\n      /*#__PURE__*/\n      // SoundStageCard component for each stage\n      // Use a unique identifier like 'stage.id' as key if available, else fallback to 'stage.name'\n      _jsxDEV(SoundStageCard, {\n        stage: stage\n      }, stage.id || stage.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this)) :\n      /*#__PURE__*/\n      // If there are no sound stages, display a message indicating this\n      _jsxDEV(\"p\", {\n        children: \"No sound stages available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }, this)\n  );\n}\n_c = SoundStageList;\nexport default SoundStageList;\nvar _c;\n$RefreshReg$(_c, \"SoundStageList\");","map":{"version":3,"names":["React","SoundStageCard","jsxDEV","_jsxDEV","SoundStageList","soundStages","className","children","length","map","stage","id","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jusbuckingham/Documents/dev-stuff/take-home-tests/soundstage-app/frontend/src/components/SoundStageList.js"],"sourcesContent":["import React from 'react';\nimport SoundStageCard from './SoundStageCard';\n\nfunction SoundStageList({ soundStages }) {\n  // This component takes an array of sound stages as a prop\n  return (\n    // Container for the list of sound stage cards\n    <div className=\"container mt-5\">\n      {/* Conditional rendering: Check if there are any sound stages */}\n      {soundStages.length > 0 ? (\n        // If there are sound stages, map over the array to render a card for each stage\n        soundStages.map(stage => (\n          // SoundStageCard component for each stage\n          // Use a unique identifier like 'stage.id' as key if available, else fallback to 'stage.name'\n          <SoundStageCard key={stage.id || stage.name} stage={stage} />\n        ))\n      ) : (\n        // If there are no sound stages, display a message indicating this\n        <p>No sound stages available.</p>\n      )}\n    </div>\n  );\n}\n\nexport default SoundStageList;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,cAAcA,CAAC;EAAEC;AAAY,CAAC,EAAE;EACvC;EACA;IAAA;IACE;IACAF,OAAA;MAAKG,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAE5BF,WAAW,CAACG,MAAM,GAAG,CAAC;MACrB;MACAH,WAAW,CAACI,GAAG,CAACC,KAAK;MAAA;MACnB;MACA;MACAP,OAAA,CAACF,cAAc;QAA8BS,KAAK,EAAEA;MAAM,GAArCA,KAAK,CAACC,EAAE,IAAID,KAAK,CAACE,IAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAC7D,CAAC;MAAA;MAEF;MACAb,OAAA;QAAAI,QAAA,EAAG;MAA0B;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACjC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;AAEV;AAACC,EAAA,GAnBQb,cAAc;AAqBvB,eAAeA,cAAc;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}