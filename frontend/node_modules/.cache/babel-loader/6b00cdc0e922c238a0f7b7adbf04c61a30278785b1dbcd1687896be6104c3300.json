{"ast":null,"code":"var _jsxFileName = \"/Users/jusbuckingham/Documents/dev-stuff/take-home-tests/netflix-take-home/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { SearchFilters } from './components/SearchFilters'; // Import as a named export\nimport { SoundStageList } from './components/SoundStageList'; // Import as a named export\n\n// Create an Axios instance with a base URL\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst axiosInstance = axios.create({\n  baseURL: 'http://localhost:3001' // Change the port to match your server\n});\n\nfunction App() {\n  _s();\n  const [soundStages, setSoundStages] = useState([]);\n  const searchSoundStages = searchCriteria => {\n    // Replace this with sampleData for testing\n    setSoundStages(sampleData);\n  };\n\n  // const searchSoundStages = (searchCriteria) => {\n  //   axiosInstance.post('/api/search', searchCriteria)\n  //     .then((response) => {\n  //       setSoundStages(response.data);\n  //     })\n  //     .catch((error) => {\n  //       console.error(error);\n  //     });\n  // }\n\n  // useEffect(() => {\n  //   // You can optionally fetch and display all available sound stages when the app starts.\n  //   axiosInstance.get('/api/soundstages')\n  //     .then((response) => {\n  //       setSoundStages(response.data);\n  //     })\n  //     .catch((error) => {\n  //       console.error(error);\n  //     });\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Soundstage Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchFilters, {\n      onSearch: searchSoundStages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SoundStageList, {\n      soundStages: soundStages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Np5ZEQpSCsUNPVbt4301CwPS4yI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","SearchFilters","SoundStageList","jsxDEV","_jsxDEV","axiosInstance","create","baseURL","App","_s","soundStages","setSoundStages","searchSoundStages","searchCriteria","sampleData","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","_c","$RefreshReg$"],"sources":["/Users/jusbuckingham/Documents/dev-stuff/take-home-tests/netflix-take-home/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { SearchFilters } from './components/SearchFilters'; // Import as a named export\nimport { SoundStageList } from './components/SoundStageList'; // Import as a named export\n\n// Create an Axios instance with a base URL\nconst axiosInstance = axios.create({\n  baseURL: 'http://localhost:3001', // Change the port to match your server\n});\n\nfunction App() {\n  const [soundStages, setSoundStages] = useState([]);\n\n  const searchSoundStages = (searchCriteria) => {\n    // Replace this with sampleData for testing\n    setSoundStages(sampleData);\n  }\n\n\n\n  // const searchSoundStages = (searchCriteria) => {\n  //   axiosInstance.post('/api/search', searchCriteria)\n  //     .then((response) => {\n  //       setSoundStages(response.data);\n  //     })\n  //     .catch((error) => {\n  //       console.error(error);\n  //     });\n  // }\n\n  // useEffect(() => {\n  //   // You can optionally fetch and display all available sound stages when the app starts.\n  //   axiosInstance.get('/api/soundstages')\n  //     .then((response) => {\n  //       setSoundStages(response.data);\n  //     })\n  //     .catch((error) => {\n  //       console.error(error);\n  //     });\n  // }, []);\n\n  return (\n    <div>\n      <h1>Soundstage Search</h1>\n      <SearchFilters onSearch={searchSoundStages} />\n      <SoundStageList soundStages={soundStages} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,4BAA4B,CAAC,CAAC;AAC5D,SAASC,cAAc,QAAQ,6BAA6B,CAAC,CAAC;;AAE9D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,aAAa,GAAGL,KAAK,CAACM,MAAM,CAAC;EACjCC,OAAO,EAAE,uBAAuB,CAAE;AACpC,CAAC,CAAC;;AAEF,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMc,iBAAiB,GAAIC,cAAc,IAAK;IAC5C;IACAF,cAAc,CAACG,UAAU,CAAC;EAC5B,CAAC;;EAID;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACEV,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1Bf,OAAA,CAACH,aAAa;MAACmB,QAAQ,EAAER;IAAkB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9Cf,OAAA,CAACF,cAAc;MAACQ,WAAW,EAAEA;IAAY;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEV;AAACV,EAAA,CAtCQD,GAAG;AAAAa,EAAA,GAAHb,GAAG;AAwCZ,eAAeA,GAAG;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}