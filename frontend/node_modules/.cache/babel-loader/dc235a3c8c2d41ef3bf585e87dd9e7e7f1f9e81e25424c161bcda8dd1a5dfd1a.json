{"ast":null,"code":"var _jsxFileName = \"/Users/jusbuckingham/Documents/dev-stuff/take-home-tests/netflix-take-home/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { SearchFilters } from './components/SearchFilters'; // Import as a named export\nimport { SoundStageList } from './components/SoundStageList'; // Import as a named export\nimport sampleData from './stage_data.json'; // Import the sample data\n\n// Create an Axios instance with a base URL\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst axiosInstance = axios.create({\n  baseURL: 'http://localhost:3001' // Change the port to match your server\n});\n\nfunction App() {\n  _s();\n  const [soundStages, setSoundStages] = useState([]);\n  const searchSoundStages = searchCriteria => {\n    axiosInstance.post('/api/search', searchCriteria).then(response => {\n      setSoundStages(response.data);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n  useEffect(() => {\n    // You can optionally fetch and display all available sound stages when the app starts.\n    axiosInstance.get('/api/soundstages').then(response => {\n      setSoundStages(response.data);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Soundstage Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchFilters, {\n      onSearch: searchSoundStages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SoundStageList, {\n      soundStages: soundStages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"cGAV03cZWKzeifMlTgdCqz/pSKI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","SearchFilters","SoundStageList","sampleData","jsxDEV","_jsxDEV","axiosInstance","create","baseURL","App","_s","soundStages","setSoundStages","searchSoundStages","searchCriteria","post","then","response","data","catch","error","console","get","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","_c","$RefreshReg$"],"sources":["/Users/jusbuckingham/Documents/dev-stuff/take-home-tests/netflix-take-home/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { SearchFilters } from './components/SearchFilters'; // Import as a named export\nimport { SoundStageList } from './components/SoundStageList'; // Import as a named export\nimport sampleData from './stage_data.json'; // Import the sample data\n\n// Create an Axios instance with a base URL\nconst axiosInstance = axios.create({\n  baseURL: 'http://localhost:3001', // Change the port to match your server\n});\n\nfunction App() {\n  const [soundStages, setSoundStages] = useState([]);\n\n\n  const searchSoundStages = (searchCriteria) => {\n    axiosInstance.post('/api/search', searchCriteria)\n      .then((response) => {\n        setSoundStages(response.data);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  useEffect(() => {\n    // You can optionally fetch and display all available sound stages when the app starts.\n    axiosInstance.get('/api/soundstages')\n      .then((response) => {\n        setSoundStages(response.data);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }, []);\n\n  return (\n    <div>\n      <h1>Soundstage Search</h1>\n      <SearchFilters onSearch={searchSoundStages} />\n      <SoundStageList soundStages={soundStages} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,4BAA4B,CAAC,CAAC;AAC5D,SAASC,cAAc,QAAQ,6BAA6B,CAAC,CAAC;AAC9D,OAAOC,UAAU,MAAM,mBAAmB,CAAC,CAAC;;AAE5C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,aAAa,GAAGN,KAAK,CAACO,MAAM,CAAC;EACjCC,OAAO,EAAE,uBAAuB,CAAE;AACpC,CAAC,CAAC;;AAEF,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAGlD,MAAMe,iBAAiB,GAAIC,cAAc,IAAK;IAC5CR,aAAa,CAACS,IAAI,CAAC,aAAa,EAAED,cAAc,CAAC,CAC9CE,IAAI,CAAEC,QAAQ,IAAK;MAClBL,cAAc,CAACK,QAAQ,CAACC,IAAI,CAAC;IAC/B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CAAC;EACN,CAAC;EAEDrB,SAAS,CAAC,MAAM;IACd;IACAO,aAAa,CAACgB,GAAG,CAAC,kBAAkB,CAAC,CAClCN,IAAI,CAAEC,QAAQ,IAAK;MAClBL,cAAc,CAACK,QAAQ,CAACC,IAAI,CAAC;IAC/B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEf,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BtB,OAAA,CAACJ,aAAa;MAAC2B,QAAQ,EAAEf;IAAkB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9CtB,OAAA,CAACH,cAAc;MAACS,WAAW,EAAEA;IAAY;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEV;AAACjB,EAAA,CAhCQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAkCZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}